<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tk.mybatis.simple.mapper.UserMapper">
    <resultMap id="userMap" type="tk.mybatis.simple.model.SysUser">
        <id property="id" column="sys_user_id"/>
        <result property="username" column="user_name"/>
        <result property="password" column="user_password"/>
        <result property="email" column="user_email"/>
        <result property="info" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <select id="selectById" resultMap="userMap">
        SELECT *
        FROM t_sys_user
        WHERE sys_user_id = #{id}
    </select>
    <select id="selectAll" resultType="tk.mybatis.simple.model.SysUser">
        SELECT sys_user_id   id,
               user_name     username,
               user_password password,
               user_email    email,
               user_info     info,
               head_img      headImg,
               create_time   createTime
        FROM t_sys_user
    </select>
    <select id="selectRolesByUserId" resultType="tk.mybatis.simple.model.SysRole">
        SELECT r.sys_role_id id,
               r.role_name   name,
               r.enabled     enabled,
               r.create_by   createBy,
               r.create_time createTime,
               u.user_name   `user.username`,
               u.user_email  `user.email`
        FROM t_sys_user u
                 JOIN t_sys_user_role ur ON u.sys_user_id = ur.sys_user_id
                 JOIN t_sys_role r ON ur.sys_role_id = r.sys_role_id
        WHERE u.sys_user_id = #{userId}
    </select>
    <insert id="insert">
        INSERT INTO t_sys_user(sys_user_id,
                               user_name,
                               user_password,
                               user_email,
                               user_info,
                               head_img,
                               create_time)
        VALUES (#{id},
                #{username},
                #{password},
                #{email},
                #{info},
                #{headImg, jdbcType=BLOB},
                #{createTime, jdbcType=TIMESTAMP})
    </insert>
    <!-- 适用于主键自增的数据库 -->
    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_sys_user(user_name,
        user_password,
        <if test="email != null and email != ''">
            user_email,
        </if>
        user_info,
        head_img,
        create_time)
        VALUES (#{username},
        #{password},
        <if test="email != null and email != ''">
            #{email},
        </if>
        #{info},
        #{headImg, jdbcType=BLOB},
        #{createTime, jdbcType=TIMESTAMP})
    </insert>
    <!-- 适用于所有数据库 -->
    <insert id="insert3">
        INSERT INTO t_sys_user (
        user_name,
        user_password,
        user_email,
        user_info,
        head_img,
        create_time
        )
        VALUES (
        #{username},
        #{password},
        #{email},
        #{info},
        #{headImg, jdbcType=BLOB},
        #{createTime, jdbcType=TIMESTAMP}
        )
        <selectKey keyColumn="sys_user_id" keyProperty="id" order="AFTER" resultType="long">
            SELECT last_insert_id()
        </selectKey>
    </insert>
    <update id="updateById">
        UPDATE t_sys_user
        SET user_name     = #{username},
            user_password = #{password},
            user_email    = #{email},
            user_info     = #{info},
            head_img      = #{headImg, jdbcType=BLOB},
            create_time   = #{createTime, jdbcType=TIMESTAMP}
        WHERE sys_user_id = #{id}
    </update>
    <delete id="deleteById">
        DELETE
        FROM t_sys_user
        WHERE sys_user_id = #{id}
    </delete>
    <select id="selectRolesByUserIdAndRoleEnabled" resultType="tk.mybatis.simple.model.SysRole">
        SELECT *
        FROM t_sys_user u
                 JOIN t_sys_user_role ur ON u.sys_user_id = ur.sys_user_id
                 JOIN t_sys_role r ON ur.sys_role_id = r.sys_role_id
        WHERE u.sys_user_id = #{userId}
          AND r.enabled = #{enabled}
    </select>
    <select id="selectRolesByUserAndRole" resultType="tk.mybatis.simple.model.SysRole">
        SELECT *
        FROM t_sys_user u
                 JOIN t_sys_user_role ur ON u.sys_user_id = ur.sys_user_id
                 JOIN t_sys_role r ON ur.sys_role_id = r.sys_role_id
        WHERE u.sys_user_id = #{user.id}
          AND r.enabled = #{role.enabled}
    </select>
    <select id="selectByUser" resultType="tk.mybatis.simple.model.SysUser">
        SELECT sys_user_id id,
        user_name username,
        user_password password,
        user_email email,
        user_info info,
        head_img headImg,
        create_time createTime
        FROM t_sys_user
        WHERE 1 = 1
        <if test="username != null and username != ''">
            AND user_name LIKE concat('%', #{username}, '%')
        </if>
        <if test="email != null and email != ''">
            AND user_email = #{email}
        </if>
    </select>
    <update id="updateByIdSelective">
        UPDATE t_sys_user
        SET
        <if test="username != null and username != ''">
            user_name = #{username},
        </if>
        <if test="password != null and password != ''">
            user_password = #{password},
        </if>
        <if test="email != null and email != ''">
            user_email = #{email},
        </if>
        <if test="info != null and info != ''">
            user_info = #{info},
        </if>
        <if test="headImg != null">
            head_img = #{headImg, jdbcType=BLOB},
        </if>
        <if test="createTime != null">
            create_time = #{createTime, jdbcType=TIMESTAMP},
        </if>
        sys_user_id = #{id}
        WHERE sys_user_id = #{id}
    </update>
</mapper>
