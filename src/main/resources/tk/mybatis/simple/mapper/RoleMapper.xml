<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tk.mybatis.simple.mapper.RoleMapper">
    <!-- 在保证二级缓存的全局配置开启的情况下，给某个 Mapper 开启二级缓存只需要添加 cache 元素即可 -->
    <!--<cache/>-->
    <!--<cache eviction="FIFO"-->
    <!--flushInterval="60000"-->
    <!--size="512"-->
    <!--readOnly="false"/>-->
    <!-- 使用 ehcache -->
    <!--<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>-->
    <cache type="org.mybatis.caches.redis.RedisCache"/>
    <resultMap id="roleMap" type="tk.mybatis.simple.model.SysRole">
        <id property="id" column="sys_role_id"/>
        <result property="name" column="role_name"/>
        <result property="enabled" column="enabled"/>
        <!--<result property="createBy" column="create_by"/>-->
        <!--<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>-->
        <association property="createInfo" javaType="tk.mybatis.simple.model.CreateInfo">
            <result property="createBy" column="create_by"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        </association>
    </resultMap>
    <resultMap id="rolePrivilegesMap" extends="roleMap" type="tk.mybatis.simple.model.SysRole">
        <collection property="privileges"
                    columnPrefix="privilege_"
                    resultMap="tk.mybatis.simple.mapper.PrivilegeMapper.privilegeMap"/>
    </resultMap>
    <resultMap id="rolePrivilegesMapSelect" extends="roleMap" type="tk.mybatis.simple.model.SysRole">
        <collection property="privileges"
                    fetchType="lazy"
                    column="{roleId=sys_role_id}"
                    select="tk.mybatis.simple.mapper.PrivilegeMapper.selectPrivilegeByRoleId"/>
    </resultMap>
    <resultMap id="rolePrivilegesMapChoose" type="tk.mybatis.simple.model.SysRole">
        <discriminator column="enabled" javaType="int">
            <case value="1" resultMap="rolePrivilegesMapSelect"/>
            <!--<case value="0" resultMap="roleMap"/>-->
            <case value="0" resultType="tk.mybatis.simple.model.SysRole">
                <id property="id" column="sys_role_id"/>
                <result property="name" column="role_name"/>
            </case>
        </discriminator>
    </resultMap>
    <select id="selectRoleById" resultMap="roleMap">
        SELECT *
        FROM t_sys_role
        WHERE sys_role_id = #{id};
    </select>
    <select id="selectAllRoleAndPrivileges" resultMap="rolePrivilegesMap">
        SELECT r.sys_role_id,
               r.role_name,
               r.enabled,
               r.create_by,
               r.create_time,
               p.sys_privilege_id privilege_sys_privilege_id,
               p.privilege_name   privilege_privilege_name,
               p.privilege_url    privilege_privilege_url
        FROM t_sys_role r
                 JOIN t_sys_role_privilege rp ON rp.sys_role_id = r.sys_role_id
                 JOIN t_sys_privilege p ON p.sys_privilege_id = rp.sys_privilege_id;
    </select>
    <select id="selectRoleByUserId"
            resultMap="rolePrivilegesMapSelect">
        SELECT r.sys_role_id,
               r.role_name,
               r.enabled,
               r.create_by,
               r.create_time
        FROM t_sys_role r
                 JOIN t_sys_user_role ur ON ur.sys_role_id = r.sys_role_id
        WHERE ur.sys_user_id = #{userId}
    </select>
    <select id="selectRoleByUserIdChoose"
            resultMap="rolePrivilegesMapChoose">
        SELECT r.sys_role_id,
               r.role_name,
               r.enabled,
               r.create_by,
               r.create_time
        FROM t_sys_role r
                 JOIN t_sys_user_role ur ON ur.sys_role_id = r.sys_role_id
        WHERE ur.sys_user_id = #{userId}
    </select>
</mapper>
